"use strict";

var _bodyParser = require("body-parser");

var _bodyParser2 = _interopRequireDefault(_bodyParser);

var _express = require("express");

var _express2 = _interopRequireDefault(_express);

var _mongoose = require("mongoose");

var _mongoose2 = _interopRequireDefault(_mongoose);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _config = require("./config/config");

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PUBLIC_PATH = _path2.default.resolve(__dirname, "../public");

var app = (0, _express2.default)();

// Connect mongoose
_mongoose2.default.Promise = global.Promise;
_mongoose2.default.connect("mongodb://localhost/rssenal", {
    useMongoClient: true,
    promiseLibrary: global.Promise
});

// Setup body-parser
app.use(_bodyParser2.default.urlencoded({ extended: true }));
app.use(_bodyParser2.default.json());

app.use(_express2.default.static(PUBLIC_PATH));

// Setup the routes
app.use("/", require("./routes"));

// Allow all URI's; handle by react router
app.get("*", function (req, res) {
    res.sendFile(_path2.default.join(PUBLIC_PATH, "/index.html"));
});

app.listen(_config2.default.port);

// Output the server listening message
console.log("-".repeat(50));
console.log("--- rssenal server listening on http://127.0.0.1:" + _config2.default.port);
console.log("-".repeat(50));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXJ2ZXIvc2VydmVyLmpzIl0sIm5hbWVzIjpbIlBVQkxJQ19QQVRIIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImFwcCIsIlByb21pc2UiLCJnbG9iYWwiLCJjb25uZWN0IiwidXNlTW9uZ29DbGllbnQiLCJwcm9taXNlTGlicmFyeSIsInVzZSIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJzdGF0aWMiLCJyZXF1aXJlIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZEZpbGUiLCJqb2luIiwibGlzdGVuIiwicG9ydCIsImNvbnNvbGUiLCJsb2ciLCJyZXBlYXQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7Ozs7O0FBRUEsSUFBTUEsY0FBYyxlQUFLQyxPQUFMLENBQWFDLFNBQWIsRUFBd0IsV0FBeEIsQ0FBcEI7O0FBRUEsSUFBTUMsTUFBTSx3QkFBWjs7QUFFQTtBQUNBLG1CQUFTQyxPQUFULEdBQW1CQyxPQUFPRCxPQUExQjtBQUNBLG1CQUFTRSxPQUFULENBQWlCLDZCQUFqQixFQUFnRDtBQUM1Q0Msb0JBQWdCLElBRDRCO0FBRTVDQyxvQkFBZ0JILE9BQU9EO0FBRnFCLENBQWhEOztBQUtBO0FBQ0FELElBQUlNLEdBQUosQ0FBUSxxQkFBV0MsVUFBWCxDQUFzQixFQUFFQyxVQUFVLElBQVosRUFBdEIsQ0FBUjtBQUNBUixJQUFJTSxHQUFKLENBQVEscUJBQVdHLElBQVgsRUFBUjs7QUFFQVQsSUFBSU0sR0FBSixDQUFRLGtCQUFRSSxNQUFSLENBQWViLFdBQWYsQ0FBUjs7QUFFQTtBQUNBRyxJQUFJTSxHQUFKLENBQVEsR0FBUixFQUFhSyxRQUFRLFVBQVIsQ0FBYjs7QUFFQTtBQUNBWCxJQUFJWSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3ZCQSxRQUFJQyxRQUFKLENBQWEsZUFBS0MsSUFBTCxDQUFVbkIsV0FBVixFQUF1QixhQUF2QixDQUFiO0FBQ0gsQ0FGRDs7QUFJQUcsSUFBSWlCLE1BQUosQ0FBVyxpQkFBT0MsSUFBbEI7O0FBRUE7QUFDQUMsUUFBUUMsR0FBUixDQUFZLElBQUlDLE1BQUosQ0FBVyxFQUFYLENBQVo7QUFDQUYsUUFBUUMsR0FBUixDQUFZLHNEQUFzRCxpQkFBT0YsSUFBekU7QUFDQUMsUUFBUUMsR0FBUixDQUFZLElBQUlDLE1BQUosQ0FBVyxFQUFYLENBQVoiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0IG1vbmdvb3NlIGZyb20gXCJtb25nb29zZVwiO1xuaW1wb3J0IHBhdGggZnJvbSBcInBhdGhcIjtcblxuaW1wb3J0IENPTkZJRyBmcm9tIFwiLi9jb25maWcvY29uZmlnXCI7XG5cbmNvbnN0IFBVQkxJQ19QQVRIID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgXCIuLi9wdWJsaWNcIik7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gQ29ubmVjdCBtb25nb29zZVxubW9uZ29vc2UuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xubW9uZ29vc2UuY29ubmVjdChcIm1vbmdvZGI6Ly9sb2NhbGhvc3QvcnNzZW5hbFwiLCB7XG4gICAgdXNlTW9uZ29DbGllbnQ6IHRydWUsXG4gICAgcHJvbWlzZUxpYnJhcnk6IGdsb2JhbC5Qcm9taXNlXG59KTtcblxuLy8gU2V0dXAgYm9keS1wYXJzZXJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoUFVCTElDX1BBVEgpKTtcblxuLy8gU2V0dXAgdGhlIHJvdXRlc1xuYXBwLnVzZShcIi9cIiwgcmVxdWlyZShcIi4vcm91dGVzXCIpKTtcblxuLy8gQWxsb3cgYWxsIFVSSSdzOyBoYW5kbGUgYnkgcmVhY3Qgcm91dGVyXG5hcHAuZ2V0KFwiKlwiLCAocmVxLCByZXMpID0+IHtcbiAgICByZXMuc2VuZEZpbGUocGF0aC5qb2luKFBVQkxJQ19QQVRILCBcIi9pbmRleC5odG1sXCIpKTtcbn0pO1xuXG5hcHAubGlzdGVuKENPTkZJRy5wb3J0KTtcblxuLy8gT3V0cHV0IHRoZSBzZXJ2ZXIgbGlzdGVuaW5nIG1lc3NhZ2VcbmNvbnNvbGUubG9nKFwiLVwiLnJlcGVhdCg1MCkpO1xuY29uc29sZS5sb2coXCItLS0gcnNzZW5hbCBzZXJ2ZXIgbGlzdGVuaW5nIG9uIGh0dHA6Ly8xMjcuMC4wLjE6XCIgKyBDT05GSUcucG9ydCk7XG5jb25zb2xlLmxvZyhcIi1cIi5yZXBlYXQoNTApKTtcbiJdfQ==